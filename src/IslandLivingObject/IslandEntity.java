package src.IslandLivingObject;

import java.util.Map;

public interface IslandEntity {

    IslandEntityType getType();

    int getX();

    int getY();

    void setX(int x);

    void setY(int y);
}


//todo сделать чтобы у сущности бралась координата динамически

//убрать дублирование кода

//вероятность поедания сделать в конфиг и передавать в сервис поедания

//убрать row type везде параметризовать

//сделать класс генерэйт

//сделать наполнение листов в статик блоке

//https://refactoring.guru/design-patterns/singleton

//сделать direction сервис, который выдает направление в виде енам (райт лефт топ бот)
//убрать нижние подчеркивания

//сделать зависимоть мувинг от дирекшн сервис

//сделать приватный метод валидэйт

//сделать дирекшн валидатор (это второй способ)

//нужно всегда соблюдать single responsability
// ОДИН КЛАСС - ОДИН ПУБЛИЧНЫЙ МЕТОД!


//if instanceof - это проблема неправилоьной иерархии (использовать визитер)

//должно прилетать репродюсебл

//сделать вэйт вместо 2 сек при инициализации

//параметризовать  мапу в countEntities...

//возвращать мапу в виде Map

//генератор плэнтов сделать  так, чтобы можно было везде использовать

//переделать генератор на count()

//переписать генерацию плэнт на 100

//переделать так, чтобы не генерились куча ОБЪЕКТОВ нутришн eat и мув

//https://github.com/Defenx/island